# ðŸš— Dynamic Parking Price Streaming with Pathway

## Overview

This project demonstrates a real-time, demand-based dynamic pricing system for parking lots using streaming data and the [Pathway](https://pathway.com/) framework.  
The pipeline ingests live (or replayed) parking data, applies advanced feature engineering, and computes dynamic prices per lot based on occupancy, traffic, queue length, and special events.  
Visualization is provided via Bokeh for interactive exploration of price trends.

## Tech Stack

- **Python 3.x**
- **Pandas**: Data cleaning and feature engineering
- **Pathway**: Real-time data streaming, transformation, and pipeline orchestration
- **Bokeh**: Interactive data visualization
- **Google Colab**: Development and experimentation environment
- **Git/GitHub**: Version control and collaboration

## Architecture Diagram

```mermaid
flowchart TD
    A[Raw CSV Data (Google Drive)] --> B[Pandas Data Cleaning & Feature Engineering]
    B --> C[Cleaned CSV for Streaming]
    C --> D[Pathway Streaming Pipeline]
    D --> E[Dynamic Price Calculation (Model 2)]
    E --> F[Bokeh Visualization]
```

## Project Architecture & Workflow

1. **Data Loading & Cleaning**
    - Raw parking data is loaded from Google Drive.
    - Missing values, inconsistent types, and outliers are handled.
    - Feature engineering includes normalization and mapping categorical features (e.g., traffic, vehicle type).
    - A unique `LotID` is constructed if not present.

2. **Demand-Based Pricing Model (Model 2)**
    - Calculates a dynamic price for each lot at each timestamp using:
        - Occupancy
        - Capacity
        - Queue length
        - Traffic conditions
        - Special day indicator
        - Vehicle type (with weights)
    - Normalizes demand and maps it to a price range.

3. **Streaming with Pathway**
    - Cleaned data is streamed using Pathwayâ€™s `replay_csv` at a controlled rate.
    - The pipeline processes each row, applies the pricing model, and outputs results in real time.

4. **Visualization**
    - Bokeh is used to visualize the evolution of prices per lot over time.
    - The plot can be viewed interactively in Colab or Jupyter.

## How to Run

1. **Clone the repository and open the `test_model_2.ipynb` notebook in Google Colab.**
2. **Upload your dataset to Google Drive (update the path in the notebook if needed).**
3. **Run the notebook cells in order:**
    - Data loading and cleaning
    - Feature engineering and price calculation
    - Pathway streaming and visualization

## Repository Structure

```
.
â”œâ”€â”€ test_model_2.ipynb         # Main Colab notebook
â”œâ”€â”€ parking_stream_model2.csv  # Cleaned data ready for streaming (generated by notebook)
â”œâ”€â”€ README.md                  # This file
â””â”€â”€ (Optional) report.pdf      # Additional report (if available)
```

## Notes

- **All code is tested and runs in Google Colab.**
- **Pathway open-source version does not support exporting to pandas after streaming; use the built-in `.plot()` method for visualization.**
- **If you need to analyze data with pandas, do so before streaming.**

## Documentation

- The notebook is extensively commented for clarity.
- See code cells for detailed explanations of each step.

## Report

- (Optional) See `report.pdf` for a summary of results and model evaluation.

## Access

- This repository is **public**. If you encounter access issues, please contact the maintainer.

## Contact

- For questions, contact bss10i19ibrahimazeem@gmail.com

**Good luck, and thank you for reviewing this project! ðŸš€**
